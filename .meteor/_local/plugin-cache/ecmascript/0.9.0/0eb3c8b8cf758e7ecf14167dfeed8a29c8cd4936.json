{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/markdown","imported":["Showdown"],"specifiers":[{"kind":"named","imported":"Showdown","local":"Showdown"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"../models","imported":["Stories"],"specifiers":[{"kind":"named","imported":"Stories","local":"Stories"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/Timeline.js","filenameRelative":"imports/ui/Timeline.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/Timeline.js.map","sourceFileName":"imports/ui/Timeline.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Timeline"},"ignored":false,"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session(v) {\n    Session = v;\n  }\n\n}, 1);\nlet Showdown;\nmodule.watch(require(\"meteor/markdown\"), {\n  Showdown(v) {\n    Showdown = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Stories;\nmodule.watch(require(\"../models\"), {\n  Stories(v) {\n    Stories = v;\n  }\n\n}, 4);\nconst Converter = new Showdown.converter();\n\nclass Timeline extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      story_ids: [],\n      stories: []\n    };\n    this.setPageScrollListener();\n  }\n\n  componentDidMount() {\n    this.getStories();\n  }\n\n  setPageScrollListener() {\n    window.onscroll = () => {\n      var d = document.documentElement;\n      var offset = d.scrollTop + window.innerHeight;\n      var height = d.offsetHeight;\n      var padding = 10;\n\n      if (offset >= height - padding) {\n        // Get more stories\n        this.getStories();\n      }\n    };\n  }\n\n  getStories() {\n    if (!this.state.loading) {\n      this.setState({\n        loading: true\n      });\n      Meteor.call('timeline.getStories', {\n        subjects: this.props.subjects,\n        story_ids: this.state.story_ids\n      }, (err, data) => {\n        if (!err) {\n          var story_ids = this.state.story_ids;\n          data.forEach(story => {\n            story_ids.push(story._id);\n          });\n          var stories = this.state.stories.concat(data);\n          this.setState({\n            loading: false,\n            story_ids,\n            stories\n          });\n        } else {\n          this.setState({\n            loading: false\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    var stories = this.state.stories.map(story => {\n      return React.createElement(\n        \"div\",\n        {\n          key: story._id,\n          className: \"story\"\n        },\n        React.createElement(\"div\", {\n          id: \"content\",\n          dangerouslySetInnerHTML: {\n            __html: Converter.makeHtml(story.content)\n          }\n        })\n      );\n    });\n    return React.createElement(\n      \"div\",\n      {\n        className: \"container\"\n      },\n      stories\n    );\n  }\n\n}\n\nmodule.exportDefault(withTracker(({\n  subjects\n}) => {\n  return {}; // A outra prossibilidade seria modificar variáveis dentro deste módulo\n  // para as variáveis reativas, por exemplo, de stories,\n  // fizesse as buscas\n  // mas o minimongo não permitiria em produção\n  // var stories_from_subjects = Stories.find({subjects: {$in: subjects}}).fetch();\n  // var ids = stories_from_subjects.map((story)=>{\n  //   return story._id;\n  // });\n  //\n  // var more_stories = Stories.find({_id: {$nin: ids}}).fetch();\n  //\n  // return {\n  //   stories: stories_from_subjects.concat(more_stories)\n  // }\n})(Timeline));","map":{"version":3,"sources":["imports/ui/Timeline.js"],"names":["React","Component","module","watch","require","default","v","Session","Showdown","withTracker","Stories","Converter","converter","Timeline","constructor","props","state","loading","story_ids","stories","setPageScrollListener","componentDidMount","getStories","window","onscroll","d","document","documentElement","offset","scrollTop","innerHeight","height","offsetHeight","padding","setState","Meteor","call","subjects","err","data","forEach","story","push","_id","concat","render","map","__html","makeHtml","content","exportDefault"],"mappings":"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","file":"imports/ui/Timeline.js.map","sourcesContent":["import React, { Component } from 'react';\nimport { Session } from 'meteor/session';\nimport { Showdown } from 'meteor/markdown';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Stories } from '../models';\n\nconst Converter = new Showdown.converter();\n\nclass Timeline extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      loading: false,\n      story_ids: [],\n      stories: []\n    };\n\n    this.setPageScrollListener();\n  }\n\n  componentDidMount(){\n    this.getStories();\n  }\n\n  setPageScrollListener(){\n    window.onscroll = ()=>{\n      var d = document.documentElement;\n      var offset = d.scrollTop + window.innerHeight;\n      var height = d.offsetHeight;\n      var padding = 10;\n\n      if (offset >= height-padding) {\n        // Get more stories\n        this.getStories();\n      }\n    };\n  }\n\n  getStories(){\n    if(!this.state.loading){\n      this.setState({loading: true});\n      Meteor.call('timeline.getStories', {subjects: this.props.subjects, story_ids: this.state.story_ids}, (err, data)=>{\n        if(!err){\n          var story_ids = this.state.story_ids;\n          data.forEach((story)=>{\n            story_ids.push(story._id);\n          });\n\n          var stories = this.state.stories.concat(data);\n\n          this.setState({loading: false, story_ids, stories});\n        }else{\n          this.setState({loading: false});\n        }\n      });\n    }\n  }\n\n  render() {\n    var stories = this.state.stories.map( (story)=>{\n      return (\n        <div key={story._id} className='story'>\n        <div id='content' dangerouslySetInnerHTML={{__html: Converter.makeHtml(story.content)}} />\n        </div>\n      );\n    } );\n\n    return (\n      <div className=\"container\">\n      { stories }\n      </div>\n    )\n  }\n}\n\nexport default withTracker(({subjects}) =>{\n  return {};\n\n  // A outra prossibilidade seria modificar variáveis dentro deste módulo\n  // para as variáveis reativas, por exemplo, de stories,\n  // fizesse as buscas\n  // mas o minimongo não permitiria em produção\n\n  // var stories_from_subjects = Stories.find({subjects: {$in: subjects}}).fetch();\n  // var ids = stories_from_subjects.map((story)=>{\n  //   return story._id;\n  // });\n  //\n  // var more_stories = Stories.find({_id: {$nin: ids}}).fetch();\n  //\n  // return {\n  //   stories: stories_from_subjects.concat(more_stories)\n  // }\n})(Timeline);\n"]},"hash":"0eb3c8b8cf758e7ecf14167dfeed8a29c8cd4936"}
