{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/mdg:validation-error/validation-error.js","filenameRelative":"packages/mdg:validation-error/validation-error.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/mdg:validation-error/validation-error.js.map","sourceFileName":"packages/mdg:validation-error/validation-error.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"validation-error"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* global ValidationError:true */ /* global SimpleSchema */ // This is exactly what comes out of SS.\nvar errorSchema = new SimpleSchema({\n  name: {\n    type: String\n  },\n  type: {\n    type: String\n  },\n  details: {\n    type: Object,\n    blackbox: true,\n    optional: true\n  }\n});\nvar errorsSchema = new SimpleSchema({\n  errors: {\n    type: Array\n  },\n  'errors.$': {\n    type: errorSchema\n  }\n});\n\nValidationError = function (_Meteor$Error) {\n  (0, _inherits3.default)(_class, _Meteor$Error);\n\n  function _class(errors) {\n    var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Validation Failed';\n    (0, _classCallCheck3.default)(this, _class);\n    errorsSchema.validate({\n      errors: errors\n    });\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Meteor$Error.call(this, ValidationError.ERROR_CODE, message, errors));\n\n    _this.errors = errors;\n    return _this;\n  }\n\n  return _class;\n}(Meteor.Error); // If people use this to check for the error code, we can change it\n// in future versions\n\n\nValidationError.ERROR_CODE = 'validation-error';","map":{"version":3,"sources":["packages/mdg:validation-error/validation-error.js"],"names":["errorSchema","SimpleSchema","name","type","String","details","Object","blackbox","optional","errorsSchema","errors","Array","ValidationError","message","validate","ERROR_CODE","Meteor","Error"],"mappings":";;;;;;;;;;;;;;AAAA,iC,CACA,yB,CAEA;AACA,IAAMA,cAAc,IAAIC,YAAJ,CAAiB;AACnCC,QAAM;AAACC,UAAMC;AAAP,GAD6B;AAEnCD,QAAM;AAACA,UAAMC;AAAP,GAF6B;AAGnCC,WAAS;AAACF,UAAMG,MAAP;AAAeC,cAAU,IAAzB;AAA+BC,cAAU;AAAzC;AAH0B,CAAjB,CAApB;AAMA,IAAMC,eAAe,IAAIR,YAAJ,CAAiB;AACpCS,UAAQ;AAACP,UAAMQ;AAAP,GAD4B;AAEpC,cAAY;AAACR,UAAMH;AAAP;AAFwB,CAAjB,CAArB;;AAKAY;AAAA;;AACE,kBAAYF,MAAZ,EAAmD;AAAA,QAA/BG,OAA+B,uEAArB,mBAAqB;AAAA;AACjDJ,iBAAaK,QAAb,CAAsB;AAACJ;AAAD,KAAtB;;AADiD,+DAGjD,yBAAME,gBAAgBG,UAAtB,EAAkCF,OAAlC,EAA2CH,MAA3C,CAHiD;;AAKjD,UAAKA,MAAL,GAAcA,MAAd;AALiD;AAMlD;;AAPH;AAAA,EAAgCM,OAAOC,KAAvC,E,CAUA;AACA;;;AACAL,gBAAgBG,UAAhB,GAA6B,kBAA7B","file":"packages/mdg:validation-error/validation-error.js.map","sourcesContent":["/* global ValidationError:true */\n/* global SimpleSchema */\n\n// This is exactly what comes out of SS.\nconst errorSchema = new SimpleSchema({\n  name: {type: String},\n  type: {type: String},\n  details: {type: Object, blackbox: true, optional: true}\n});\n\nconst errorsSchema = new SimpleSchema({\n  errors: {type: Array},\n  'errors.$': {type: errorSchema}\n});\n\nValidationError = class extends Meteor.Error {\n  constructor(errors, message = 'Validation Failed') {\n    errorsSchema.validate({errors});\n\n    super(ValidationError.ERROR_CODE, message, errors);\n\n    this.errors = errors;\n  }\n};\n\n// If people use this to check for the error code, we can change it\n// in future versions\nValidationError.ERROR_CODE = 'validation-error';\n"]},"hash":"4e343bf35684dce811dcb51d782ae7ffdb31aa5a"}
