{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"../session","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Session"}]},{"source":"meteor/markdown","imported":["Showdown"],"specifiers":[{"kind":"named","imported":"Showdown","local":"Showdown"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"./Timeline","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Timeline"}]},{"source":"../models","imported":["Tellers","Subjects"],"specifiers":[{"kind":"named","imported":"Tellers","local":"Tellers"},{"kind":"named","imported":"Subjects","local":"Subjects"}]},{"source":"../css/style.css","imported":[],"specifiers":[]},{"source":"./Menu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Menu"}]},{"source":"../helper","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Helper"}]},{"source":"react-redux","imported":["connect"],"specifiers":[{"kind":"named","imported":"connect","local":"connect"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/Panel.js","filenameRelative":"imports/ui/Panel.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/Panel.js.map","sourceFileName":"imports/ui/Panel.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Panel"},"ignored":false,"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Session;\nmodule.watch(require(\"../session\"), {\n  default(v) {\n    Session = v;\n  }\n\n}, 1);\nlet Showdown;\nmodule.watch(require(\"meteor/markdown\"), {\n  Showdown(v) {\n    Showdown = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet ReactDOM;\nmodule.watch(require(\"react-dom\"), {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 4);\nlet Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template(v) {\n    Template = v;\n  }\n\n}, 5);\nlet Timeline;\nmodule.watch(require(\"./Timeline\"), {\n  default(v) {\n    Timeline = v;\n  }\n\n}, 6);\nlet Tellers, Subjects;\nmodule.watch(require(\"../models\"), {\n  Tellers(v) {\n    Tellers = v;\n  },\n\n  Subjects(v) {\n    Subjects = v;\n  }\n\n}, 7);\nmodule.watch(require(\"../css/style.css\"));\nlet Menu;\nmodule.watch(require(\"./Menu\"), {\n  default(v) {\n    Menu = v;\n  }\n\n}, 8);\nlet Helper;\nmodule.watch(require(\"../helper\"), {\n  default(v) {\n    Helper = v;\n  }\n\n}, 9);\nlet connect;\nmodule.watch(require(\"react-redux\"), {\n  connect(v) {\n    connect = v;\n  }\n\n}, 10);\nconst Converter = new Showdown.converter();\n\nclass Panel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      new_story_content: '',\n      new_story_subjects: '',\n      subjects: [],\n      new_subject: ''\n    };\n    this.update_subjects_timer;\n    this.has_received_subjects = false;\n    this.isLoggedIn = Helper.isLoggedIn(); // this.foo = new ReactiveVar( false );\n    // this.foo.set({'teste': true})\n  }\n\n  componentDidUpdate() {\n    console.log('will update', this.props.teller);\n\n    if (this.props.subjects && !this.has_received_subjects) {\n      this.has_received_subjects = true;\n    } // alert(this.foo.get())\n\n  }\n\n  handleSubmitNewStory(e) {\n    e.preventDefault(); // cria os objectos de subject\n\n    var subjects = this.createSubjectsFromString(this.state.new_story_subjects);\n    Meteor.call('panel.newStory', {\n      content: this.state.new_story_content,\n      subjects: subjects\n    }, (err, data) => {\n      if (!err) {\n        console.log('data', data);\n        ReactDOM.findDOMNode(this.refs['new-story-subjects']).value = '';\n        ReactDOM.findDOMNode(this.refs['new-story-content']).value = '';\n        this.setState({\n          new_story_content: ''\n        });\n      } else {\n        console.log('err', err);\n      }\n    });\n  }\n\n  createSubjectsFromString(subjects_string) {\n    var subjects = subjects_string.split(',').map(subject => {\n      return {\n        name: subject.trim()\n      };\n    });\n    return subjects;\n  }\n\n  handleSubmitNewSubject(e) {\n    e.preventDefault();\n    var subjects = this.props.subjects;\n    subjects = subjects.concat(this.createSubjectsFromString(this.state.new_subject));\n    Meteor.call('panel.updateSubjects', {\n      teller_id: this.props.teller._id,\n      subjects: subjects\n    }, (err, data) => {\n      if (!err) {\n        ReactDOM.findDOMNode(this.refs['new-subject']).value = '';\n      } else {\n        console.log('err', err);\n      }\n    });\n  }\n\n  removeSubject(_id) {\n    console.log('subjects ANTES remover', this.props.subjects);\n    var subjects = this.props.subjects;\n    subjects = subjects.filter(subject => {\n      return subject._id !== _id;\n    });\n    Meteor.call('panel.updateSubjects', {\n      teller_id: this.props.teller._id,\n      subjects: subjects\n    }, (err, data) => {\n      if (!err) {\n        console.log('subjects', data);\n      } else {\n        console.log('err', err);\n      }\n    });\n  }\n\n  render() {\n    if (this.props.subjects) {\n      var subjects = this.props.subjects.map((subject, i) => {\n        return React.createElement(\n          \"span\",\n          {\n            key: i\n          },\n          subject.name,\n          \" \",\n          React.createElement(\n            \"button\",\n            {\n              onClick: () => {\n                this.removeSubject(subject._id);\n              }\n            },\n            \"Remover\"\n          )\n        );\n      });\n    } // if(this.props.teller){\n\n\n    return React.createElement(\n      \"div\",\n      {\n        className: \"container\"\n      },\n      React.createElement(Menu, null),\n      this.props.teller ? React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"div\",\n          null,\n          \"Seja bem vindo, \",\n          this.props.teller.email\n        ),\n        React.createElement(\n          \"div\",\n          null,\n          subjects\n        ),\n        React.createElement(\n          \"form\",\n          {\n            id: \"new-subject-form\",\n            onSubmit: this.handleSubmitNewSubject.bind(this)\n          },\n          React.createElement(\"input\", {\n            id: \"new-subject\",\n            ref: \"new-subject\",\n            onChange: e => {\n              this.setState({\n                new_subject: e.target.value\n              });\n            }\n          })\n        ),\n        React.createElement(\n          \"form\",\n          {\n            className: \"new-story-form\",\n            onSubmit: this.handleSubmitNewStory.bind(this)\n          },\n          React.createElement(\"div\", {\n            id: \"new-story-preview\",\n            dangerouslySetInnerHTML: {\n              __html: Converter.makeHtml(this.state.new_story_content)\n            }\n          }),\n          React.createElement(\"textarea\", {\n            id: \"markdown-text\",\n            ref: \"new-story-content\",\n            onChange: e => {\n              this.setState({\n                new_story_content: e.target.value\n              });\n            },\n            defaultValue: this.state.new_story_content\n          }),\n          React.createElement(\"input\", {\n            id: \"new-story-subjects\",\n            ref: \"new-story-subjects\",\n            defaultValue: this.state.new_story_subjects,\n            onChange: e => {\n              this.setState({\n                new_story_subjects: e.target.value\n              });\n            }\n          }),\n          React.createElement(\n            \"button\",\n            null,\n            \"Send\"\n          )\n        ),\n        React.createElement(Timeline, {\n          subjects: this.props.teller.subjects\n        })\n      ) : null\n    ); // }else this.props.history.push('/panel');\n  }\n\n}\n\nvar trackedComponent = withTracker(props => {\n  console.log('props', props);\n  var teller = Tellers.findOne({\n    _id: Session.get('teller_id')\n  });\n  return {\n    teller: teller,\n    subjects: teller ? Subjects.find({\n      _id: {\n        $in: teller.subjects\n      }\n    }).fetch() : []\n  };\n})(Panel);\nvar connectedComponent = connect(function (state) {\n  console.log('state', state);\n  return state;\n})(trackedComponent);\nmodule.exportDefault(connectedComponent);","map":{"version":3,"sources":["imports/ui/Panel.js"],"names":["React","Component","module","watch","require","default","v","Session","Showdown","withTracker","ReactDOM","Template","Timeline","Tellers","Subjects","Menu","Helper","connect","Converter","converter","Panel","constructor","props","state","new_story_content","new_story_subjects","subjects","new_subject","update_subjects_timer","has_received_subjects","isLoggedIn","componentDidUpdate","console","log","teller","handleSubmitNewStory","e","preventDefault","createSubjectsFromString","Meteor","call","content","err","data","findDOMNode","refs","value","setState","subjects_string","split","map","subject","name","trim","handleSubmitNewSubject","concat","teller_id","_id","removeSubject","filter","render","i","email","bind","target","__html","makeHtml","trackedComponent","findOne","get","find","$in","fetch","connectedComponent","exportDefault"],"mappings":"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","file":"imports/ui/Panel.js.map","sourcesContent":["import React, { Component } from 'react';\n// import { Session } from 'meteor/session';\nimport Session from '../session';\nimport { Showdown } from 'meteor/markdown';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport ReactDOM from 'react-dom'\nimport { Template } from 'meteor/templating';\n\nimport Timeline from './Timeline';\nimport { Tellers, Subjects } from '../models';\nimport '../css/style.css';\nimport Menu from './Menu'\nimport Helper from '../helper'\n\nimport { connect } from 'react-redux'\n\nconst Converter = new Showdown.converter();\n\nclass Panel extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      new_story_content: '',\n      new_story_subjects: '',\n      subjects: [],\n      new_subject: ''\n    };\n\n    this.update_subjects_timer;\n    this.has_received_subjects = false;\n    this.isLoggedIn = Helper.isLoggedIn();\n\n    // this.foo = new ReactiveVar( false );\n    // this.foo.set({'teste': true})\n  }\n\n  componentDidUpdate(){\n\n    console.log('will update', this.props.teller);\n    if(this.props.subjects && !this.has_received_subjects){\n      this.has_received_subjects = true;\n    }\n\n    // alert(this.foo.get())\n  }\n\n  handleSubmitNewStory(e){\n    e.preventDefault();\n\n    // cria os objectos de subject\n\n    var subjects = this.createSubjectsFromString(this.state.new_story_subjects);\n\n    Meteor.call('panel.newStory', {content: this.state.new_story_content, subjects: subjects}, (err, data)=>{\n      if(!err){\n        console.log('data', data)\n        ReactDOM.findDOMNode(this.refs['new-story-subjects']).value = '';\n        ReactDOM.findDOMNode(this.refs['new-story-content']).value = '';\n        this.setState({new_story_content: ''})\n      }else{\n        console.log('err', err)\n      }\n    });\n  }\n\n  createSubjectsFromString(subjects_string){\n    var subjects = subjects_string.split(',').map((subject)=>{\n      return {\n        name: subject.trim()\n      };\n    });\n\n    return subjects;\n  }\n\n  handleSubmitNewSubject(e){\n    e.preventDefault();\n    var subjects = this.props.subjects;\n    subjects = subjects.concat(this.createSubjectsFromString(this.state.new_subject));\n    Meteor.call('panel.updateSubjects', {teller_id: this.props.teller._id, subjects: subjects}, (err, data)=>{\n      if(!err){\n        ReactDOM.findDOMNode(this.refs['new-subject']).value = '';\n      }else{\n        console.log('err', err)\n      }\n    });\n  }\n\n  removeSubject(_id){\n    console.log('subjects ANTES remover',  this.props.subjects)\n    var subjects = this.props.subjects;\n    subjects = subjects.filter((subject)=>{\n      return subject._id !== _id;\n    });\n\n    Meteor.call('panel.updateSubjects', {teller_id: this.props.teller._id, subjects: subjects}, (err, data)=>{\n      if(!err){\n        console.log('subjects', data)\n      }else{\n        console.log('err', err)\n      }\n    });\n  }\n\n  render() {\n    if(this.props.subjects){\n      var subjects = this.props.subjects.map((subject, i)=>{\n        return (\n          <span key={i}>{subject.name} <button onClick={()=>{\n            this.removeSubject(subject._id)\n          }}>Remover</button></span>\n        )\n      })\n    }\n    // if(this.props.teller){\n    return (\n      <div className=\"container\">\n        <Menu />\n      {\n        (this.props.teller) ? (\n          <div>\n          <div>Seja bem vindo, {this.props.teller.email}</div>\n\n          <div>\n          { subjects }\n          </div>\n\n          <form id=\"new-subject-form\" onSubmit={this.handleSubmitNewSubject.bind(this)}>\n          <input id=\"new-subject\" ref=\"new-subject\"\n          onChange={(e)=>{\n            this.setState({new_subject: e.target.value});\n          }}\n          />\n          </form>\n\n          <form className='new-story-form' onSubmit={this.handleSubmitNewStory.bind(this)}>\n          <div id='new-story-preview' dangerouslySetInnerHTML={{__html: Converter.makeHtml(this.state.new_story_content)}} />\n\n          <textarea id='markdown-text' ref=\"new-story-content\"\n          onChange={(e)=>{\n            this.setState({new_story_content: e.target.value})\n          }}\n          defaultValue={this.state.new_story_content}>\n          </textarea>\n\n          <input id=\"new-story-subjects\" ref=\"new-story-subjects\"\n          defaultValue={this.state.new_story_subjects}\n          onChange={(e)=>{\n            this.setState({new_story_subjects: e.target.value})\n          }}\n          />\n\n          <button>Send</button>\n          </form>\n\n          <Timeline subjects={this.props.teller.subjects} />\n          </div>\n        ) : null\n      }\n      </div>\n    );\n    // }else this.props.history.push('/panel');\n  }\n}\n\nvar trackedComponent = withTracker((props) =>{\n  console.log('props', props)\n  var teller = Tellers.findOne({_id: Session.get('teller_id')});\n  return {\n    teller: teller,\n    subjects: teller ? Subjects.find({_id: {$in: teller.subjects}}).fetch() : []\n  }\n})(Panel);\n\nvar connectedComponent = connect(function(state){\n  console.log('state', state)\n  return state;\n})(trackedComponent);\n\nexport default connectedComponent;\n"]},"hash":"a63c11badba1d873f595f1053ec5aacf441ac085"}
