{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/mdg:validation-error/validation-error.js","filenameRelative":"packages/mdg:validation-error/validation-error.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/mdg:validation-error/validation-error.js.map","sourceFileName":"packages/mdg:validation-error/validation-error.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"validation-error"},"ignored":false,"code":"/* global ValidationError:true */ /* global SimpleSchema */ // This is exactly what comes out of SS.\nconst errorSchema = new SimpleSchema({\n  name: {\n    type: String\n  },\n  type: {\n    type: String\n  },\n  details: {\n    type: Object,\n    blackbox: true,\n    optional: true\n  }\n});\nconst errorsSchema = new SimpleSchema({\n  errors: {\n    type: Array\n  },\n  'errors.$': {\n    type: errorSchema\n  }\n});\nValidationError = class extends Meteor.Error {\n  constructor(errors, message = 'Validation Failed') {\n    errorsSchema.validate({\n      errors\n    });\n    super(ValidationError.ERROR_CODE, message, errors);\n    this.errors = errors;\n  }\n\n}; // If people use this to check for the error code, we can change it\n// in future versions\n\nValidationError.ERROR_CODE = 'validation-error';","map":{"version":3,"sources":["packages/mdg:validation-error/validation-error.js"],"names":["errorSchema","SimpleSchema","name","type","String","details","Object","blackbox","optional","errorsSchema","errors","Array","ValidationError","Meteor","Error","constructor","message","validate","ERROR_CODE"],"mappings":"AAAA,iC,CACA,yB,CAEA;AACA,MAAMA,cAAc,IAAIC,YAAJ,CAAiB;AACnCC,QAAM;AAACC,UAAMC;AAAP,GAD6B;AAEnCD,QAAM;AAACA,UAAMC;AAAP,GAF6B;AAGnCC,WAAS;AAACF,UAAMG,MAAP;AAAeC,cAAU,IAAzB;AAA+BC,cAAU;AAAzC;AAH0B,CAAjB,CAApB;AAMA,MAAMC,eAAe,IAAIR,YAAJ,CAAiB;AACpCS,UAAQ;AAACP,UAAMQ;AAAP,GAD4B;AAEpC,cAAY;AAACR,UAAMH;AAAP;AAFwB,CAAjB,CAArB;AAKAY,kBAAkB,cAAcC,OAAOC,KAArB,CAA2B;AAC3CC,cAAYL,MAAZ,EAAoBM,UAAU,mBAA9B,EAAmD;AACjDP,iBAAaQ,QAAb,CAAsB;AAACP;AAAD,KAAtB;AAEA,UAAME,gBAAgBM,UAAtB,EAAkCF,OAAlC,EAA2CN,MAA3C;AAEA,SAAKA,MAAL,GAAcA,MAAd;AACD;;AAP0C,CAA7C,C,CAUA;AACA;;AACAE,gBAAgBM,UAAhB,GAA6B,kBAA7B","file":"packages/mdg:validation-error/validation-error.js.map","sourcesContent":["/* global ValidationError:true */\n/* global SimpleSchema */\n\n// This is exactly what comes out of SS.\nconst errorSchema = new SimpleSchema({\n  name: {type: String},\n  type: {type: String},\n  details: {type: Object, blackbox: true, optional: true}\n});\n\nconst errorsSchema = new SimpleSchema({\n  errors: {type: Array},\n  'errors.$': {type: errorSchema}\n});\n\nValidationError = class extends Meteor.Error {\n  constructor(errors, message = 'Validation Failed') {\n    errorsSchema.validate({errors});\n\n    super(ValidationError.ERROR_CODE, message, errors);\n\n    this.errors = errors;\n  }\n};\n\n// If people use this to check for the error code, we can change it\n// in future versions\nValidationError.ERROR_CODE = 'validation-error';\n"]},"hash":"b34c372d7b1f8ce44042a54615e307545f8656f2"}
